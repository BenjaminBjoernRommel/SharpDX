// <auto-generated/>

namespace SharpDX.XAPO.Fx
{
    /// <summary>
    /// <p>Initialization parameters for use with the FXECHO XAPOFX.</p>
    /// </summary>
    /// <remarks>
    /// <p>Use of this structure is optional. The default <strong>MaxDelay</strong> is <strong><see cref = "DefaultDelay"/></strong>.</p><strong>Note</strong>??The DirectX SDK versions of XAUDIO2 don't support this functionality.?
    /// </remarks>
    /// <doc-id>microsoft.directx_sdk.xapofx.fxecho_initdata</doc-id>
    /// <unmanaged>FXECHO_INITDATA</unmanaged>
    /// <unmanaged-short>FXECHO_INITDATA</unmanaged-short>
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 0, CharSet = System.Runtime.InteropServices.CharSet.Unicode)]
    public partial struct EchoInitdata
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxecho_initdata</doc-id>
        /// <unmanaged>MaxDelay</unmanaged>
        /// <unmanaged-short>MaxDelay</unmanaged-short>
        public System.Single MaxDelay;
    }

    /// <summary>
    /// <p>Parameters for use with the FXECHO XAPOFX.</p>
    /// </summary>
    /// <remarks>
    /// <p>Echo only supports FLOAT32 audio formats.</p>
    /// </remarks>
    /// <doc-id>microsoft.directx_sdk.xapofx.fxecho_parameters</doc-id>
    /// <unmanaged>FXECHO_PARAMETERS</unmanaged>
    /// <unmanaged-short>FXECHO_PARAMETERS</unmanaged-short>
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 0, CharSet = System.Runtime.InteropServices.CharSet.Unicode)]
    public partial struct EchoParameters
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxecho_parameters</doc-id>
        /// <unmanaged>WetDryMix</unmanaged>
        /// <unmanaged-short>WetDryMix</unmanaged-short>
        public System.Single WetDryMix;
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxecho_parameters</doc-id>
        /// <unmanaged>Feedback</unmanaged>
        /// <unmanaged-short>Feedback</unmanaged-short>
        public System.Single Feedback;
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxecho_parameters</doc-id>
        /// <unmanaged>Delay</unmanaged>
        /// <unmanaged-short>Delay</unmanaged-short>
        public System.Single Delay;
    }

    /// <summary>
    /// <p>Parameters for use with the FXEQ XAPO.</p>
    /// </summary>
    /// <remarks>
    /// <p>Each band ranges from <strong>FrequencyCenterN</strong> - (<strong>BandwidthN</strong> / 2) to <strong>FrequencyCenterN</strong> + (<strong>BandwidthN</strong> / 2). </p>
    /// </remarks>
    /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
    /// <unmanaged>FXEQ_PARAMETERS</unmanaged>
    /// <unmanaged-short>FXEQ_PARAMETERS</unmanaged-short>
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 0, CharSet = System.Runtime.InteropServices.CharSet.Unicode)]
    public partial struct EqualizerParameters
    {
        /// <summary>
        /// <dd> <p>Center frequency in Hz for band 0. Must be between <see cref = "MinimumFrequencyCenter"/> and <see cref = "MaximumFrequencyCenter"/>.</p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>FrequencyCenter0</unmanaged>
        /// <unmanaged-short>FrequencyCenter0</unmanaged-short>
        public System.Single FrequencyCenter0;
        /// <summary>
        /// <dd> <p>The boost or decrease to frequencies in band 0. Must be between <see cref = "MinimumGain"/> and <see cref = "MaximumGain"/> </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Gain0</unmanaged>
        /// <unmanaged-short>Gain0</unmanaged-short>
        public System.Single Gain0;
        /// <summary>
        /// <dd> <p>Width of band 0. Must be between <see cref = "MinimumBandwidth"/> and <see cref = "MaximumBandwidth"/>. </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Bandwidth0</unmanaged>
        /// <unmanaged-short>Bandwidth0</unmanaged-short>
        public System.Single Bandwidth0;
        /// <summary>
        /// <dd> <p>Center frequency in Hz for band 1. Must be between <see cref = "MinimumFrequencyCenter"/> and <see cref = "MaximumFrequencyCenter"/>. </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>FrequencyCenter1</unmanaged>
        /// <unmanaged-short>FrequencyCenter1</unmanaged-short>
        public System.Single FrequencyCenter1;
        /// <summary>
        /// <dd> <p>The boost or decrease to frequencies in band 1. Must be between <see cref = "MinimumGain"/> and <see cref = "MaximumGain"/></p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Gain1</unmanaged>
        /// <unmanaged-short>Gain1</unmanaged-short>
        public System.Single Gain1;
        /// <summary>
        /// <dd> <p>Width of band 1. Must be between <see cref = "MinimumBandwidth"/> and <see cref = "MaximumBandwidth"/>.</p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Bandwidth1</unmanaged>
        /// <unmanaged-short>Bandwidth1</unmanaged-short>
        public System.Single Bandwidth1;
        /// <summary>
        /// <dd> <p>Center frequency in Hz for band 2. Must be between <see cref = "MinimumFrequencyCenter"/> and <see cref = "MaximumFrequencyCenter"/>.</p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>FrequencyCenter2</unmanaged>
        /// <unmanaged-short>FrequencyCenter2</unmanaged-short>
        public System.Single FrequencyCenter2;
        /// <summary>
        /// <dd> <p>The boost or decrease to frequencies in band 2. Must be between <see cref = "MinimumGain"/> and <see cref = "MaximumGain"/> </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Gain2</unmanaged>
        /// <unmanaged-short>Gain2</unmanaged-short>
        public System.Single Gain2;
        /// <summary>
        /// <dd> <p>Width of band 2. Must be between <see cref = "MinimumBandwidth"/> and <see cref = "MaximumBandwidth"/>. </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Bandwidth2</unmanaged>
        /// <unmanaged-short>Bandwidth2</unmanaged-short>
        public System.Single Bandwidth2;
        /// <summary>
        /// <dd> <p>Center frequency in Hz for band 3. Must be between <see cref = "MinimumFrequencyCenter"/> and <see cref = "MaximumFrequencyCenter"/>. </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>FrequencyCenter3</unmanaged>
        /// <unmanaged-short>FrequencyCenter3</unmanaged-short>
        public System.Single FrequencyCenter3;
        /// <summary>
        /// <dd> <p>The boost or decrease to frequencies in band 3. Must be between <see cref = "MinimumGain"/> and <see cref = "MaximumGain"/> </p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Gain3</unmanaged>
        /// <unmanaged-short>Gain3</unmanaged-short>
        public System.Single Gain3;
        /// <summary>
        /// <dd> <p>Width of band 3. Must be between <see cref = "MinimumBandwidth"/> and <see cref = "MaximumBandwidth"/>.</p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxeq_parameters</doc-id>
        /// <unmanaged>Bandwidth3</unmanaged>
        /// <unmanaged-short>Bandwidth3</unmanaged-short>
        public System.Single Bandwidth3;
    }

    /// <summary>
    /// <p>Parameters for use with the FXMasteringLimiter  XAPO.</p>
    /// </summary>
    /// <doc-id>microsoft.directx_sdk.xapofx.fxmasteringlimiter_parameters</doc-id>
    /// <unmanaged>FXMASTERINGLIMITER_PARAMETERS</unmanaged>
    /// <unmanaged-short>FXMASTERINGLIMITER_PARAMETERS</unmanaged-short>
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 0, CharSet = System.Runtime.InteropServices.CharSet.Unicode)]
    public partial struct MasteringLimiterParameters
    {
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxmasteringlimiter_parameters</doc-id>
        /// <unmanaged>Release</unmanaged>
        /// <unmanaged-short>Release</unmanaged-short>
        public System.Int32 Release;
        /// <summary>
        /// No documentation.
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxmasteringlimiter_parameters</doc-id>
        /// <unmanaged>Loudness</unmanaged>
        /// <unmanaged-short>Loudness</unmanaged-short>
        public System.Int32 Loudness;
    }

    /// <summary>
    /// <p>Parameters for use with the FXReverb XAPO.</p>
    /// </summary>
    /// <doc-id>microsoft.directx_sdk.xapofx.fxreverb_parameters</doc-id>
    /// <unmanaged>FXREVERB_PARAMETERS</unmanaged>
    /// <unmanaged-short>FXREVERB_PARAMETERS</unmanaged-short>
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 0, CharSet = System.Runtime.InteropServices.CharSet.Unicode)]
    public partial struct ReverbParameters
    {
        /// <summary>
        /// <dd> <p>Controls the character of the individual wall reflections. Set to minimum value to simulate a hard flat surface and to maximum value to simulate a diffuse surface.Value must be between <see cref = "MinimumDiffusion"/> and <see cref = "MaximumDiffusion"/>.</p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxreverb_parameters</doc-id>
        /// <unmanaged>Diffusion</unmanaged>
        /// <unmanaged-short>Diffusion</unmanaged-short>
        public System.Single Diffusion;
        /// <summary>
        /// <dd> <p>Size of the room. Value must be between <see cref = "MinimumRoomsize"/> and <see cref = "MaximumRoomsize"/>. Note that physical meaning of RoomSize is subjective and not tied to any particular units. A smaller value will result in reflections reaching the listener more quickly while reflections will take longer with larger values for RoomSize.</p> </dd>
        /// </summary>
        /// <doc-id>microsoft.directx_sdk.xapofx.fxreverb_parameters</doc-id>
        /// <unmanaged>RoomSize</unmanaged>
        /// <unmanaged-short>RoomSize</unmanaged-short>
        public System.Single RoomSize;
    }
}