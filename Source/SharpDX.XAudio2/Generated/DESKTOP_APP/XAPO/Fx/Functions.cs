// <auto-generated/>

namespace SharpDX.XAPO.Fx
{
    /// <summary>
    /// Functions
    /// </summary>
    public partial class Echo
    {
                ///<summary>Constant MinimumWetdrymix</summary>
        ///<unmanaged>FXECHO_MIN_WETDRYMIX</unmanaged>
        public const float MinimumWetdrymix = 0.0F;
                ///<summary>Constant MaximumWetdrymix</summary>
        ///<unmanaged>FXECHO_MAX_WETDRYMIX</unmanaged>
        public const float MaximumWetdrymix = 1.0F;
                ///<summary>Constant DefaultWetdrymix</summary>
        ///<unmanaged>FXECHO_DEFAULT_WETDRYMIX</unmanaged>
        public const float DefaultWetdrymix = 0.5F;
                ///<summary>Constant MinimumFeedback</summary>
        ///<unmanaged>FXECHO_MIN_FEEDBACK</unmanaged>
        public const float MinimumFeedback = 0.0F;
                ///<summary>Constant MaximumFeedback</summary>
        ///<unmanaged>FXECHO_MAX_FEEDBACK</unmanaged>
        public const float MaximumFeedback = 1.0F;
                ///<summary>Constant DefaultFeedback</summary>
        ///<unmanaged>FXECHO_DEFAULT_FEEDBACK</unmanaged>
        public const float DefaultFeedback = 0.5F;
                ///<summary>Constant MinimumDelay</summary>
        ///<unmanaged>FXECHO_MIN_DELAY</unmanaged>
        public const float MinimumDelay = 1.0F;
                ///<summary>Constant MaximumDelay</summary>
        ///<unmanaged>FXECHO_MAX_DELAY</unmanaged>
        public const float MaximumDelay = 2000.0F;
                ///<summary>Constant DefaultDelay</summary>
        ///<unmanaged>FXECHO_DEFAULT_DELAY</unmanaged>
        public const float DefaultDelay = 500.0F;
    }

    /// <summary>
    /// Functions
    /// </summary>
    public partial class Equalizer
    {
                ///<summary>Constant MinimumFrameRate</summary>
        ///<unmanaged>FXEQ_MIN_FRAMERATE</unmanaged>
        public const float MinimumFrameRate = 22000;
                ///<summary>Constant MaximumFrameRate</summary>
        ///<unmanaged>FXEQ_MAX_FRAMERATE</unmanaged>
        public const float MaximumFrameRate = 48000;
                ///<summary>Constant MinimumFrequencyCenter</summary>
        ///<unmanaged>FXEQ_MIN_FREQUENCY_CENTER</unmanaged>
        public const float MinimumFrequencyCenter = 20.0F;
                ///<summary>Constant MaximumFrequencyCenter</summary>
        ///<unmanaged>FXEQ_MAX_FREQUENCY_CENTER</unmanaged>
        public const float MaximumFrequencyCenter = 2.0E+4F;
                ///<summary>Constant DefaultFrequencyCenter0</summary>
        ///<unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_0</unmanaged>
        public const float DefaultFrequencyCenter0 = 100.0F;
                ///<summary>Constant DefaultFrequencyCenter1</summary>
        ///<unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_1</unmanaged>
        public const float DefaultFrequencyCenter1 = 800.0F;
                ///<summary>Constant DefaultFrequencyCenter2</summary>
        ///<unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_2</unmanaged>
        public const float DefaultFrequencyCenter2 = 2000.0F;
                ///<summary>Constant DefaultFrequencyCenter3</summary>
        ///<unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_3</unmanaged>
        public const float DefaultFrequencyCenter3 = 1.0E+4F;
                ///<summary>Constant MinimumGain</summary>
        ///<unmanaged>FXEQ_MIN_GAIN</unmanaged>
        public const float MinimumGain = 0.126000002F;
                ///<summary>Constant MaximumGain</summary>
        ///<unmanaged>FXEQ_MAX_GAIN</unmanaged>
        public const float MaximumGain = 7.94000006F;
                ///<summary>Constant DefaultGain</summary>
        ///<unmanaged>FXEQ_DEFAULT_GAIN</unmanaged>
        public const float DefaultGain = 1.0F;
                ///<summary>Constant MinimumBandwidth</summary>
        ///<unmanaged>FXEQ_MIN_BANDWIDTH</unmanaged>
        public const float MinimumBandwidth = 0.100000001F;
                ///<summary>Constant MaximumBandwidth</summary>
        ///<unmanaged>FXEQ_MAX_BANDWIDTH</unmanaged>
        public const float MaximumBandwidth = 2.0F;
                ///<summary>Constant DefaultBandwidth</summary>
        ///<unmanaged>FXEQ_DEFAULT_BANDWIDTH</unmanaged>
        public const float DefaultBandwidth = 1.0F;
    }

    /// <summary>
    /// Functions
    /// </summary>
    public partial class MasteringLimiter
    {
                ///<summary>Constant MinimumRelease</summary>
        ///<unmanaged>FXMASTERINGLIMITER_MIN_RELEASE</unmanaged>
        public const int MinimumRelease = 1;
                ///<summary>Constant MaximumRelease</summary>
        ///<unmanaged>FXMASTERINGLIMITER_MAX_RELEASE</unmanaged>
        public const int MaximumRelease = 20;
                ///<summary>Constant DefaultRelease</summary>
        ///<unmanaged>FXMASTERINGLIMITER_DEFAULT_RELEASE</unmanaged>
        public const int DefaultRelease = 6;
                ///<summary>Constant MinimumLoudness</summary>
        ///<unmanaged>FXMASTERINGLIMITER_MIN_LOUDNESS</unmanaged>
        public const int MinimumLoudness = 1;
                ///<summary>Constant MaximumLoudness</summary>
        ///<unmanaged>FXMASTERINGLIMITER_MAX_LOUDNESS</unmanaged>
        public const int MaximumLoudness = 1800;
                ///<summary>Constant DefaultLoudness</summary>
        ///<unmanaged>FXMASTERINGLIMITER_DEFAULT_LOUDNESS</unmanaged>
        public const int DefaultLoudness = 1000;
    }

    /// <summary>
    /// Functions
    /// </summary>
    public partial class Reverb
    {
                ///<summary>Constant MinimumDiffusion</summary>
        ///<unmanaged>FXREVERB_MIN_DIFFUSION</unmanaged>
        public const float MinimumDiffusion = 0.0F;
                ///<summary>Constant MaximumDiffusion</summary>
        ///<unmanaged>FXREVERB_MAX_DIFFUSION</unmanaged>
        public const float MaximumDiffusion = 1.0F;
                ///<summary>Constant DefaultDiffusion</summary>
        ///<unmanaged>FXREVERB_DEFAULT_DIFFUSION</unmanaged>
        public const float DefaultDiffusion = 0.899999976F;
                ///<summary>Constant MinimumRoomsize</summary>
        ///<unmanaged>FXREVERB_MIN_ROOMSIZE</unmanaged>
        public const float MinimumRoomsize = 9.99999974E-5F;
                ///<summary>Constant MaximumRoomsize</summary>
        ///<unmanaged>FXREVERB_MAX_ROOMSIZE</unmanaged>
        public const float MaximumRoomsize = 1.0F;
                ///<summary>Constant DefaultRoomsize</summary>
        ///<unmanaged>FXREVERB_DEFAULT_ROOMSIZE</unmanaged>
        public const float DefaultRoomsize = 0.600000024F;
    }

    /// <summary>
    /// Functions
    /// </summary>
    static partial class XAPOFx
    {
    }
}