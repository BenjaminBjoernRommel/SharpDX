// <auto-generated/>

namespace SharpDX.DirectComposition
{
    /// <summary>
    /// <p>Describes timing and composition statistics for a frame.</p>
    /// </summary>
    /// <remarks>
    /// <p>The <strong>IDCompositionDevice::GetFrameStatistics</strong> method fills this structure. An application can use the information in this structure to estimate the timestamp of the next few frames that will be started by the composition engine. Note that this is only an estimate because the composition engine may or may not compose the next frame, depending on whether any active animations or other work are pending for that frame. In addition, the composition engine may change frame rates according to the cost of composing individual frames.</p>
    /// </remarks>
    /// <doc-id>hh437366</doc-id>
    /// <unmanaged>DCOMPOSITION_FRAME_STATISTICS</unmanaged>
    /// <unmanaged-short>DCOMPOSITION_FRAME_STATISTICS</unmanaged-short>
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 0, CharSet = System.Runtime.InteropServices.CharSet.Unicode)]
    public partial struct FrameStatistics
    {
        /// <summary>
        /// <dd> <p>The time stamp of the last batch of commands to be processed by the composition engine.</p> </dd>
        /// </summary>
        /// <doc-id>hh437366</doc-id>
        /// <unmanaged>lastFrameTime</unmanaged>
        /// <unmanaged-short>lastFrameTime</unmanaged-short>
        public System.Int64 LastFrameTime;
        /// <summary>
        /// <dd> <p>The rate at which the composition engine is producing frames, in frames per second.</p> </dd>
        /// </summary>
        /// <doc-id>hh437366</doc-id>
        /// <unmanaged>currentCompositionRate</unmanaged>
        /// <unmanaged-short>currentCompositionRate</unmanaged-short>
        public SharpDX.DXGI.Rational CurrentCompositionRate;
        /// <summary>
        /// <dd> <p>The current time as computed by the <strong>QueryPerformanceCounter</strong> function.</p> </dd>
        /// </summary>
        /// <doc-id>hh437366</doc-id>
        /// <unmanaged>currentTime</unmanaged>
        /// <unmanaged-short>currentTime</unmanaged-short>
        public System.Int64 CurrentTime;
        /// <summary>
        /// <dd> <p>The units in which the <strong>lastFrameTime</strong> and <strong>currentTime</strong> members are specified, in Hertz.</p> </dd>
        /// </summary>
        /// <doc-id>hh437366</doc-id>
        /// <unmanaged>timeFrequency</unmanaged>
        /// <unmanaged-short>timeFrequency</unmanaged-short>
        public System.Int64 TimeFrequency;
        /// <summary>
        /// <dd> <p>The estimated time when the next frame will be displayed.</p> </dd>
        /// </summary>
        /// <doc-id>hh437366</doc-id>
        /// <unmanaged>nextEstimatedFrameTime</unmanaged>
        /// <unmanaged-short>nextEstimatedFrameTime</unmanaged-short>
        public System.Int64 NextEstimatedFrameTime;
    }
}